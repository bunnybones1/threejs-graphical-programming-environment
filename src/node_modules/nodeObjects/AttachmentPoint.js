var THREE = require('three');

var __geometry;
function __getGeometry() {
	if(!__geometry) {
		__geometry = new THREE.SphereGeometry(0.1, 16, 8);
	}
	return __geometry;
}

var __material;
function __getMaterial() {
	if(!__material) {
		__material = new THREE.MeshBasicMaterial({
			color: new THREE.Color(0.8, 0.8, 0.8)});
	}
	return __material;
}

var __materialHighlight;
function __getMaterialHighlight() {
	if(!__materialHighlight) {
		__materialHighlight = new THREE.MeshBasicMaterial({
			color: new THREE.Color(1, 1, 0.8)});
	}
	return __materialHighlight;
}

function AttachmentPoint() {
	THREE.Mesh.call(this, __getGeometry(), __getMaterial());
	this.connections = [];
	this.isAttachmentPoint = true;
}

AttachmentPoint.prototype = Object.create(THREE.Mesh.prototype);

AttachmentPoint.prototype.highlight = function() {
	this.material = __getMaterialHighlight();
};

AttachmentPoint.prototype.unhighlight = function() {
	this.material = __getMaterial();
};

AttachmentPoint.prototype.clone = function() {
	var clone = new AttachmentPoint();
	THREE.Mesh.prototype.copy.call(clone, this);
	clone.connections = [];
	clone.isAttachmentPoint = true;
	return clone;
};

module.exports = AttachmentPoint;
