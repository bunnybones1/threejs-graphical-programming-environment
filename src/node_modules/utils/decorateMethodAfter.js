function decorateMethodAfter(object, methodName, additionalFunctionality, bindTargetOptional) {
    var oldMethod = object[methodName];
    if(!oldMethod) throw new Error('There is no method here to decorate.');
    var newMethod = function() {
        var result = oldMethod.apply(object, arguments);
        additionalFunctionality.apply(this, arguments);
        return result;
    };
    object[methodName] = newMethod.bind(bindTargetOptional || object);
    return {
        object: object,
        methodName: methodName,
        originalMethod: oldMethod
    };
}

module.exports = decorateMethodAfter;
