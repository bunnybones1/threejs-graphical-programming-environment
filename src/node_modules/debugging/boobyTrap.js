var decorateMethodBefore = require('../decorateMethodBefore');

function callDebugger() {
	debugger;
}

function boobyTrap(object, propertyName, settingTrap, gettingTrap) {
	if(object === undefined || propertyName === undefined) throw new Error('You need to provide an object and a property key to place booby trap.');
	settingTrap = settingTrap !== undefined ? settingTrap : true;
	if(settingTrap === true) settingTrap = callDebugger;
	if(gettingTrap === true) gettingTrap = callDebugger;
	var _varStore = object[propertyName];
	Object.defineProperty(object, propertyName, {
		set: function(value) {
			if(settingTrap) settingTrap(value);
			_varStore = value;
		},
		get: function() {
			if(gettingTrap) gettingTrap()
			return _varStore;
		}
	});
	if(typeof object[propertyName] === 'function') {
		decorateMethodBefore(object, propertyName, settingTrap || gettingTrap || callDebugger);
	}
}

module.exports = boobyTrap;
window.boobyTrap = boobyTrap;
